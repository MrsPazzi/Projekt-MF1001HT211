//Börjar med värdet 0 för dessa variabler
int h2o = 0; //Mätvärdet från vattensensorn
int nivo = 0; //Halten vatten i tanken
int fukt = 0; //Jordufuktigheten


//Anger varable för sensor och komponenter kopplad till arduinon skölden.
#define valv 0 //valven som öppnas vid vattning
#define jordfukt A0 //Fuktighetssensor
#define vatten A1 //Vattensensor

//gränsvärden till intervallet som mätvärden från vattenssenson läggs in i.
#define full 0
#define fyll 521

//Inkluderar modul och filer nödvändig för att ladda upp data till thingspeak
#include <WiFiNINA.h>
#include "secrets.h"
#include "ThingSpeak.h" 
char ssid[] = SECRET_SSID;   //namnet på wifi, som är skriven i secrets.h
char pass[] = SECRET_PASS;   //lösenord till wifi
int keyIndex = 0;           
WiFiClient  client;
unsigned long myChannelNumber = SECRET_CH_ID;
const char * myWriteAPIKey = SECRET_WRITE_APIKEY;



void setup() {
  // kopplar upp till nätverket 
  Serial.begin(115200);  // Initialize serial
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo native USB port only
  }
  
  // check for the WiFi module:
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }

  String fv = WiFi.firmwareVersion();
  if (fv != "1.0.0") {
    Serial.println("Please upgrade the firmware");
  }
    
  ThingSpeak.begin(client);  //Initialize ThingSpeak
}

void loop() {

  // Connect or reconnect to WiFi
  if(WiFi.status() != WL_CONNECTED){
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(SECRET_SSID);
    while(WiFi.status() != WL_CONNECTED){
      WiFi.begin(ssid, pass); // Connect to WPA/WPA2 network. Change this line if using open or WEP network
      Serial.print(".");
      delay(5000);     
    } 
    Serial.println("\nConnected.");
  }

  digitalWrite(valv, LOW); 
  h2o = analogRead(vatten); //Tar in mätvärde från vattensensorn
  nivo = map(h2o, full, fyll, 0, 100); //Kartläggning utav gränsvärden för att sedan bli jämförd med h20

  
  if(nivo<10){
  Serial.print("SLUT PÅ VATTEN. VÄNLIGEN FYLL."); //Går över else-satsen för dagen och vattanar inte för dagen. 
  }
  else{
    Serial.print("MOISTURE LEVEL : ");

    //Mäter jordfuktigheten i växten
   fukt= analogRead(jordfukt);
   fukt= fukt/10; //Dividerar det med tio, sådom att värden inte är onödig stora att hantera.
   Serial.println(fukt);

   //IF-sats som avgör om det ska vattnas
   if(0 < fukt < 50);
   {
    Serial.print("Vattnar...");
      digitalWrite(valv, HIGH);
      delay(40000);
      Serial.print("Klart!");
    }

    //Kollar vattennivån igen
    h2o = analogRead(vatten);
    nivo = map(h2o, full, fyll, 0, 100);
    if(nivo<50){
      Serial.print("SLUT PÅ VATTEN. VÄNLIGEN FYLL.");
      }
    }
  
  
  
  //Uppladning till thingspeak sida, som innehåller två grafer för vardera sensor.
  // Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to 8 different
  // pieces of information in a channel.  Here, we write to field 1.
  
  int x = ThingSpeak.writeField(myChannelNumber, 1, fukt, myWriteAPIKey);
  if(x == 200){
    Serial.println("Channel update successful.");
  }
  else{
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }

  int y = ThingSpeak.writeField(myChannelNumber, 2, nivo, myWriteAPIKey);
  if(y==200){
    Serial.println("Channel update succesful.");
   }

  

  
  delay(864000000); // Delay insatt på ett dygn så den går igenom loopen igen efter ett dygn.

}
