int h2o = 0;
int nivo = 0;
int fukt = 0;

#define valv 0
#define jordfukt A0
#define vatten A1
#define full 0
#define fyll 521

#include <WiFiNINA.h>
#include "secrets.h"
#include "ThingSpeak.h" // always include thingspeak header file after other header files and custom macros

char ssid[] = SECRET_SSID;    //  your network SSID (name) 
char pass[] = SECRET_PASS;   // your network password
int keyIndex = 0;            // your network key Index number (needed only for WEP)
WiFiClient  client;

unsigned long myChannelNumber = SECRET_CH_ID;
const char * myWriteAPIKey = SECRET_WRITE_APIKEY;

int number = 0;

void setup() {
  Serial.begin(115200);  // Initialize serial
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo native USB port only
  }
  
  // check for the WiFi module:
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }

  String fv = WiFi.firmwareVersion();
  if (fv != "1.0.0") {
    Serial.println("Please upgrade the firmware");
  }
    
  ThingSpeak.begin(client);  //Initialize ThingSpeak
  
}

void loop() {

  // Connect or reconnect to WiFi
  if(WiFi.status() != WL_CONNECTED){
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(SECRET_SSID);
    while(WiFi.status() != WL_CONNECTED){
      WiFi.begin(ssid, pass); // Connect to WPA/WPA2 network. Change this line if using open or WEP network
      Serial.print(".");
      delay(5000);     
    } 
    Serial.println("\nConnected.");
  }

  digitalWrite(valv, LOW);
  h2o = analogRead(vatten);
  nivo = map(h2o, full, fyll, 0, 100);
  if(nivo<10){
  Serial.print("SLUT PÅ VATTEN. VÄNLIGEN FYLL.");
  }
  else{
    Serial.print("MOISTURE LEVEL : ");
   fukt= analogRead(jordfukt);
   fukt= fukt/10;
   Serial.println(fukt);
   if(0 < fukt < 50);
   {
    Serial.print("Vattnar...");
      digitalWrite(valv, HIGH);
      delay(40000);
      Serial.print("Klart!");
    }
    
    h2o = analogRead(vatten);
    nivo = map(h2o, full, fyll, 0, 100);
    if(nivo<50){
      Serial.print("SLUT PÅ VATTEN. VÄNLIGEN FYLL.");
      }
    }
  
  
  
  
  // Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to 8 different
  // pieces of information in a channel.  Here, we write to field 1.
  int x = ThingSpeak.writeField(myChannelNumber, 1, fukt, myWriteAPIKey);
  if(x == 200){
    Serial.println("Channel update successful.");
  }
  else{
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }

  int y = ThingSpeak.writeField(myChannelNumber, 2, nivo, myWriteAPIKey);
  if(y==200){
    Serial.println("Channel update succesful.");
   }

  

  
  delay(20000); // Wait 20 seconds to update the channel again

}